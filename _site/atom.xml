<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>setImpl</title>
 <link href="http://lhzhang.com/atom.xml" rel="self"/>
 <link href="http://lhzhang.com/"/>
 <updated>2011-12-19T15:06:44+09:00</updated>
 <id>http://lhzhang.com/</id>
 <author>
   <name>Linghua Zhang</name>
   <email>linghua.zhang@me.com</email>
 </author>

 
 <entry>
   <title>Jekyll with Tags on Github Pages</title>
   <link href="http://lhzhang.com/2011/12/19/migrated-to-github-pages.html"/>
   <updated>2011-12-19T00:00:00+09:00</updated>
   <id>urn:uuid:821c03fb-f6c7-4fe5-8a68-57427be70883</id>
   <content type="html">&lt;p&gt;最近又折腾了一回，从 hyde 换到了 jekyll，顺便迁移到了 Github Pages，省了一笔服务器的费用，也不用再手痒去折腾 vps。&lt;/p&gt;

&lt;p&gt;hyde 到 jekyll 的迁移很简单，大都是模板的修正和简单的配置，唯有 tags 的地方出了点小插曲。&lt;/p&gt;

&lt;p&gt;jekyll 本身是支持 tags 的，所有的 tag 数据都可以从 site.tags 取到，但是却没有一个现成的 tag 页面生成方案。之前用 hyde 是给每个 tag 都生成单独的 index 页面，有些繁琐也过于繁杂，于是这次把所有 tag 都集合到一个页面，然后做 html 的 anchor。同时找了个 &lt;a href=&quot;http://yeban.in/jekyll-tag-cloud.html&quot; title=&quot;Jekyll Tag Cloud&quot;&gt;tag cloud 的 plugin&lt;/a&gt;，传上去才发现原来 github pages 出于安全原因禁止了用户的 plugin。之后考虑了把源数据的东西和生成的 _site 分开两个 repo，然后把 blog 指向 _site。好处是从此可以随意添加 plugin，坏处是 publish 变得无比麻烦（虽然之前 hyde 我也是这么做的）。另一个想法是 deploy 到 heroku 上去，可是 heroku 实在是太慢了，还没设置完就彻底放弃了。&lt;/p&gt;

&lt;p&gt;于是，最终的解决方案是 javascript（出于洁癖越来越不喜欢在页面里嵌入 js 所以这个一直最后才会考虑的手段）。&lt;/p&gt;

&lt;p&gt;搜了一下发现已经有现成的东西 － &lt;a href=&quot;https://github.com/addywaddy/jquery.tagcloud.js/&quot; title=&quot;jquery.tagcloud.js&quot;&gt;jquery.tagcloud.js&lt;/a&gt;。连带着 jquery 一起下下来，然后是 tag 页面：&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1495626.js&quot;&gt;&lt;/script&gt;


&lt;ul&gt;
&lt;li&gt;&lt;em&gt;虽然嵌代码时 iA Writer 很麻烦，不过总的来说还是不错的。Textmate 2 虽然承诺了完整的 CJK 支持，但也还是停留在显示阶段而已，输入时还是有很多问题，无论中日文，说完美真是对不起“完美”这个词。话说 Textmate 2 居然真的存在w&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;jekyll 比 hyde 处理的速度快多了&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;jekyll 嵌 liquid 的 code 真麻烦，索性以后都用 gist 了，也省了高亮的 js 和 css&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Welcome to X3 world</title>
   <link href="http://lhzhang.com/2011/11/29/welcome-to-x3-world.html"/>
   <updated>2011-11-29T00:00:00+09:00</updated>
   <id>urn:uuid:82e6670e-8ad4-4ef9-972f-8ebe821ca3b0</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/lhzhang/6423070739/in/photostream&quot;&gt;&lt;img src=&quot;/media/files/2011/11/29/SDIM0029.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/lhzhang/6423073915/in/photostream&quot;&gt;&lt;img src=&quot;/media/files/2011/11/29/SDIM0055.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/lhzhang/6423075223/in/photostream&quot;&gt;&lt;img src=&quot;/media/files/2011/11/29/SDIM0061.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flickr.com/photos/lhzhang/6423083557/in/photostream&quot;&gt;&lt;img src=&quot;/media/files/2011/11/29/SDIM0087.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一天下来的感觉是，操作并没有传说中的那么不堪，反倒是很容易上手，也有很多便利的地方。对焦也没有慢的感觉。24.2mm F2.8 APSC 最重要是 X3 的传感器，没有高分辨率的录像，没有高解析度的液晶屏，朴素的反而更惹人喜爱。&lt;/p&gt;

&lt;p&gt;从此上了 X3 的贼船&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>UIImageView as Root View of View Controller</title>
   <link href="http://lhzhang.com/2011/11/22/uiimageview-as-root-view-of-view-controller.html"/>
   <updated>2011-11-22T00:00:00+09:00</updated>
   <id>urn:uuid:7af13863-a8e9-40e6-918c-ed7a59f571ca</id>
   <content type="html">&lt;p&gt;这是一个很诡异的 bug，表现为在收到 memory warning 后，回到上一个 View Controller 后界面无响应，如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/files/2011/11/22/bug.png&quot; alt=&quot;bug&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在 View Controller 3 收到低内存警告返回 View Controller 2 后界面失去响应。&lt;/p&gt;

&lt;p&gt;仔细检查后发现 View Controller 2 的 root view 是 UIImageView 并且在 loadView 里并没有修改 userInteractionEnabled 属性的值，所以 UIImageView 不接受事件处理，界面没有响应反而是正常的，于是问题变得诡异：为什么从 View Controller 1 迁移过来时这个 image view 是接受事件响应的？&lt;/p&gt;

&lt;p&gt;做个简单的 UIImageView 的 subclass 然后 override setUserInteractionEnabled: 方法后设 breakpoint，发现在 userInteractionEnabled 的值在 UIWindowController 的 transition:fromViewController:toViewController:target:didEndSelector: 方法里被修改成了 YES。&lt;/p&gt;

&lt;p&gt;问题变得更加诡异： transition:fromViewController:toViewController:target:didEndSelector: 方法在从 View Controller 3 被 dismiss 返回到 View Controller 2 时也会被调用，为什么这时候 userInteractionEnabled 的值没有变？&lt;/p&gt;

&lt;p&gt;继续比较区别，注意到从 View Controller 1 迁移到 View Controller 2 时 animated 的参数是 NO 而 View Controller 3 做 dismiss 时是设定了 animation 的：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/files/2011/11/22/with-description.png&quot; alt=&quot;bug&quot; /&gt;&lt;/p&gt;

&lt;p&gt;猜测 UIWindowController 的 transition:fromViewController:toViewController:target:didEndSelector: 方法在 transition 时在没有动画效果的情况下会检查 root view 是否是 UIImageView 并且修改 userInteractionEnabled 的值，而在有动画时则不会。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/media/files/2011/11/22/with-analytics.png&quot; alt=&quot;bug&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在 subclass 的 setUserInteractionEnabled: 方法里加 log 然后调整 present 和 dismiss 的动画参数后得到了确认。&lt;/p&gt;

&lt;p&gt;修正方法很简单，在 loadView 里创建 UIImageView 后设置 userInteractionEnabled 为 YES。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;diff --git a/PLViewController.m b/PLViewController.m
index 9d0dd8b..2386e0a 100644
--- a/PLViewController.m
+++ b/PLViewController.m
@@ -148,6 +148,7 @@ enum {
 - (void)loadView
 {        
     UIImageView *imageView = [[UIImageView alloc] initWithImage:backgroundImage];
+    imageView.userInteractionEnabled = YES;
     imageView.frame = [[UIScreen mainScreen] applicationFrame];
     self.view = imageView;
     [imageView release];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;其实在 UIImageView 作 root view 是修改 userInteractionEnabled 的值是必须的&lt;/strong&gt;，而 UIWindowController 在无动画 transition 时帮我们隐藏了这个 bug，并且这个 bug 隐藏的很深，只有在 View Controller 3 里出现内存不足，View Controller 2 的 view 被自动释放，然后在返回 View Controller 2 时重新 loadView 的场合才会出现。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;其实只作显示图片用的话直接操作 UIView 的 layer 应该是更好的选择吧，不会有这么奇怪的 bug 出现&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>R.I.P. Steve Jobs</title>
   <link href="http://lhzhang.com/2011/10/06/the-hero.html"/>
   <updated>2011-10-06T00:00:00+09:00</updated>
   <id>urn:uuid:0e19b236-b196-4f99-b274-e41b17eb9b82</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.apple.com/stevejobs/&quot;&gt;&lt;img src=&quot;/media/images/2011/10/06/RIPSteveJobs.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>回忆</title>
   <link href="http://lhzhang.com/2011/09/26/memory.html"/>
   <updated>2011-09-26T00:00:00+09:00</updated>
   <id>urn:uuid:8454eed2-ae76-49b4-ab1f-861e309308bd</id>
   <content type="html">&lt;p&gt;死党大婚在即，昨晚趴在 11 区的床上突然把自己人生的 timeline 回忆了一遍，很多人都以不再联系，有些昔日的好友已然觉得陌生，不知道他们现在在哪里，过着怎样的生活，而有些人甚至连名字都已经想不起来，只剩下对脸庞模糊的记忆。&lt;/p&gt;

&lt;p&gt;无数次的在想，哪怕只是一个很小的车站，给某个时间段内出站的人都作上标记，他们离开后的轨迹将会绘制成一副多么美妙的图画。&lt;/p&gt;

&lt;p&gt;忽然发现，一路走的过于专心，而忽略了两旁的风景，一路走的过于漫不经心，却忘记了思考&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Xcode 里自动加 build 版本号</title>
   <link href="http://lhzhang.com/2011/09/23/xcode-build-auto-increment.html"/>
   <updated>2011-09-23T00:00:00+09:00</updated>
   <id>urn:uuid:c0672177-cf08-4c4d-8d31-7516148ef4e7</id>
   <content type="html">&lt;p&gt;把 Info.plist 里的版本号改成某个数字，然后 Targets → your target → Build Phases → Run Script 的地方加上&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version=`/usr/libexec/PlistBuddy -c &quot;Print CFBundleVersion&quot; $PRODUCT_SETTINGS_PATH`
version=`expr $version + 1`
/usr/libexec/PlistBuddy -c &quot;Set :CFBundleVersion $version&quot; $PRODUCT_SETTINGS_PATH
/usr/libexec/PlistBuddy -c &quot;Set :CFBundleShortVersionString $version&quot; $PRODUCT_SETTINGS_PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个脚本会让 Xcode 在每次 build 时都自动把版本号加 1。&lt;/p&gt;

&lt;p&gt;build 数字太大了不好看也不那么人性化，于是在 git 下面我们可以&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version=`git describe --tag`
/usr/libexec/PlistBuddy -c &quot;Set :CFBundleVersion $version&quot; $PRODUCT_SETTINGS_PATH
/usr/libexec/PlistBuddy -c &quot;Set :CFBundleShortVersionString $version&quot; $PRODUCT_SETTINGS_PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样我们得到的就是 git 里最近的 tag，距离此 tag 的 commit 数以及 commit hash 的前 8 位，比如 v00.10-12-g071c526&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;今天 iCloud reset，大概离发布不远了吧&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mac 下那些常用的软件们</title>
   <link href="http://lhzhang.com/2011/08/24/the-great-softwares-on-mac.html"/>
   <updated>2011-08-24T00:00:00+09:00</updated>
   <id>urn:uuid:4e684ef0-78a6-4f03-8a37-984a4ae13ee3</id>
   <content type="html">&lt;p&gt;自己平时比较常用的软件，有自带的也有第三方的，有收费的也有免费的，仅供参考。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1Password&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;极有名的密码管理软件，除支持网站帐号管理外还可以保存软件 license 信息，银行账号，信用卡以及护照等各种敏感数据。同时还有 iOS / Android 版本。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alfred&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;类似 QucikSilver 的 launcher 软件，配合 PowerPack 已经可以完全替代 QS 了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Automator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;图形化的自定制工作流程软件，用类似 pipe 的概念把各个动作连接起来以完成一系列琐碎机械的任务。我一直认为这是 OSX 比 Windows 人性化的很好的体现&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CalendarBar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;菜单条上的 event 提醒软件，可以同步 iCal ，支持 Google Calendar ，以及 facebook 的 event&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ClipMenu&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;剪贴板管理，可以记录最近的 20 个拷贝记录。这个不重要， snippet 功能才是效率提升的关键&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reeder&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最好的 Google Reader 客户端，没有之一&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TextMate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;神一样的编辑器。虽然对 CJK 支持不够理想，传说中的 2.0 也处于常年难产中，但这丝毫不影响 TextMate 在编辑器中的地位。编辑器不是只有 vim 和 emacs ，OSX 下我们还有第三个选择。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Hit List&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;TODO 管理，用过 OmniFocus ， Things ， TaskPaper 后还是 THL 最顺手。唯一的不满是 sync 服务是收费的&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Unarchiver&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;用来对付常见的几乎所有压缩包&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Twitterrific&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Twitter 客户端&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;iTerm&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;terminal 的替代程序，比自带的终端来的顺手&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>五月病</title>
   <link href="http://lhzhang.com/2011/08/04/just-tired.html"/>
   <updated>2011-08-04T00:00:00+09:00</updated>
   <id>urn:uuid:a83fc204-45b6-44d0-b8ca-46ec67080261</id>
   <content type="html">&lt;p&gt;5月病就这么持续到了8月，且照着这个势头很有可能继续持续下去。&lt;/p&gt;

&lt;p&gt;一起的同事基本都辞职回天朝了，虽然自己对回国完全没有兴趣不过失落感还是很多的。也许是时候要出去走走了，大自然意义上的出去和工作意义上的出去。&lt;/p&gt;

&lt;p&gt;不知何时能过上靠一个 app 维生然后旅居全球的生活。基本上我就是个マダオ所以还是喜欢自在随性的生活。越来越厌恶每天耗在公司为了那点儿可怜的加班费熬到灯火通明。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>新域名</title>
   <link href="http://lhzhang.com/2011/06/15/domain-changed.html"/>
   <updated>2011-06-15T00:00:00+09:00</updated>
   <id>urn:uuid:26e652df-1654-4557-9f55-5397fb14784a</id>
   <content type="html">&lt;p&gt;下决心扔掉原来那个域名了，看到这篇的麻烦改下友链&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting old</title>
   <link href="http://lhzhang.com/2011/03/28/happybirthday.html"/>
   <updated>2011-03-28T00:00:00+09:00</updated>
   <id>urn:uuid:19a1314e-b25d-46a1-83a1-c0b3e3d0f5da</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/media/images/2011/03/28/compass.jpg&quot; alt=&quot;&amp;quot;&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;又老一岁，继续迷惘&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;算来自从02年开始就没有在家过过生日了&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
